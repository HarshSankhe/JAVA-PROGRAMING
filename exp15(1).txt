package java;
///*
//* Aim :To promote lifelong learning in Java Networking Programming by understanding and implementing a simple Client-Server application using Java Sockets. This application demonstrates the exchange of messages between a client and server, laying the foundation for further exploration into more complex networking topics.
//* Name :  Harsh Sankhe
//* UIN : 231P079
//* Div : A.
//*/

//* Server.java

import java.io.*;
import java.net.*;
public class Server {
    public static void main(String[] args) {
        try {
            // Create a server socket that listens on port 5000
            ServerSocket serverSocket = new ServerSocket(5000);
            System.out.println("Server started, waiting for client...");
            // Accept the client connection
            Socket socket = serverSocket.accept();
            System.out.println("Client connected.");
            // Input and output streams for communication
            BufferedReader input = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            PrintWriter output = new PrintWriter(socket.getOutputStream(), true);
            // Receive a message from the client
            String clientMessage = input.readLine();
            System.out.println("Client says: " + clientMessage);
            // Send a response back to the client
            output.println("Hello from the server!");
            // Close streams and socket
            input.close();
            output.close();
            socket.close();
            serverSocket.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
//*Client.java

import java.io.*;
import java.net.*;
public class Client {
    public static void main(String[] args) {
        try {
            // Connect to the server on localhost at port 5000
            Socket socket = new Socket("localhost", 5000);
            System.out.println("Connected to the server.");
            // Input and output streams for communication
            BufferedReader input = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            PrintWriter output = new PrintWriter(socket.getOutputStream(), true);

            // Send a message to the server
            output.println("Hello from the client!");
            // Receive and print the response from the server
            String serverMessage = input.readLine();
            System.out.println("Server says: " + serverMessage);
            // Close streams and socket
            input.close();
            output.close();
            socket.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}


